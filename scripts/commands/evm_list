#!/usr/bin/env bash

# show a list of all installed version in the evm space
function evm_list() {
    ## Colors
    local LIGHT_GREEN="\e[1;32m"
    local LIGHT_CYAN="\e[1;36m"
    local DARK_YELLOW="\e[1;33m"
    local NO_COLOR="\e[0m"
    local COLOR_SUPPORT="FALSE"

    # See if terminal supports colors...
    local tcolors=$(tput colors)

    # Just set a flag in case color is support by this shell
    if [[ -n "$tcolors" ]] && [[ $tcolors -ge 8 ]]; then
        COLOR_SUPPORT="TRUE"
    fi

    evm_message "Installed Erlang versions on this system"
    evm_message ""

    # Get the default version
    local default_version="$(cat $EVM_HOME/evm_config/erlang_default)"
    local system="$(uname -s)"

    # Get the current versin in use from PATH
    if [[ "$system" == "Darwin" ]]; then
        evm_dev_info "echo $PATH | egrep -o "$ERLANG_VERSIONS_LOCATION.*?/bin" | awk -F'erlang_versions/' '{print \$2}' | awk -F'/bin' '{print \$1}' | head -1"
        local version_in_use="$(echo $PATH | egrep -o "$ERLANG_VERSIONS_LOCATION.*?/bin" | awk -F'erlang_versions/' '{print $2}' | awk -F'/bin' '{print $1}' | head -1)"
    else
        evm_dev_info "echo $PATH | grep -Po "$ERLANG_VERSIONS_LOCATION.*?/bin" | awk -F'erlang_versions/' '{print \$2}' | awk -F'/bin' '{print \$1}'| head -1"
        local version_in_use="$(echo $PATH | grep -Po "$ERLANG_VERSIONS_LOCATION.*?/bin" | awk -F'erlang_versions/' '{print $2}' | awk -F'/bin' '{print $1}' | head -1)"
    fi

    ## Do that inside a subshell to not alter the user settings
    (
    unalias ls >> /dev/null 2>&1
    for directory in $(ls $ERLANG_VERSIONS_LOCATION | sort | perl -e 'print reverse <>'); do
        local ver="${directory}"

        # Apply symbols and colors
        if [[ "$ver" == "$default_version" && "$ver" == "$version_in_use" ]]; then
            ver="=* $ver"

            # Show default and current as 'green'
            if [[ "$COLOR_SUPPORT" == "TRUE" ]]; then
                ver="${LIGHT_GREEN}$ver${NO_COLOR}"
            fi

        elif [[ "$ver" == "$default_version" ]]; then
            ver="* $ver"

            # Show default (but not current) as 'yellow'
            if [[ "$COLOR_SUPPORT" == "TRUE" ]]; then
                ver="${DARK_YELLOW}$ver${NO_COLOR}"
            fi

        elif [[ "$ver" == "$version_in_use" ]]; then
            ver="=> $ver"

            # Show current (but not default) as cyan
            if [[ "$COLOR_SUPPORT" == "TRUE" ]]; then
                ver="${LIGHT_GREEN}$ver${NO_COLOR}"
            fi
        fi
        echo -e "$ver"
    done
    )

    evm_message ""
    evm_message "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
    evm_message "%                                               %"
    evm_message "%            =* : current and default           %"
    evm_message "%            => : current                       %"
    evm_message "%             * : default                       %"
    evm_message "%                                               %"
    evm_message "%   use 'evm use [version]' to switch version   %"
    evm_message "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
    evm_message ""
    evm_message ""
}
