#!/usr/bin/env bash

__update_scripts_evm_for_evm_use() {
	local FILE="$1"
	local VERSION="$2"

	if [[ ! -f "$FILE" ]]; then
		evm_warn "Does not exist $FILE file on your system"
		return 1
	fi

	for directory in $ERLANG_VERSIONS_LOCATION/*; do
		evm_dev_info "--------------------------"
		evm_dev_info "directory => $directory"
		evm_dev_info "--------------------------"
		PATH="$(echo $PATH | sed -e "s,$directory/bin,,g ; s,^:,, ; s,::,:,g ; s,:$,,")"
	done

	grep -F "$EVM_HOME/bin" $PATH > /dev/null 2>&1
	while [[ $? -eq 0 ]]; do
		PATH="$(echo $PATH | sed -e "s,$EVM_HOME/bin,,g ; s,^:,, ; s,::,:,g ; s,:$,,")"
		grep -F "$EVM_HOME/bin" $PATH > /dev/null 2>&1
	done

	evm_dev_info "============== $PATH ================"

	local source_line="export PATH=$PATH:$EVM_HOME/bin:$ERLANG_VERSIONS_LOCATION/$VERSION/bin"

	evm_dev_info "grep -F \"export PATH=\" $FILE > /dev/null 2>&1"
	grep -F "export PATH=" $FILE > /dev/null 2>&1

	if [[ $? -eq 0 ]]; then
		sed -i '/export PATH=.*\/erlang_versions\/.*\/bin/d' $FILE
	fi

	echo -e "\n$source_line" >> $FILE
}


# set this erlang version to be the one available in the PATH
# @params: erlang_version, e.g. 22.3.2
evm_use() {
    local VERSION=$1

	if [[ ! -f $EVM_HOME/scripts/export_path ]] ; then
		evm_dev_info "
		Counld not find $EVM_HOME/scripts/export_path file in your system.
		evm will create this file automatically.
		"
		touch $EVM_HOME/scripts/export_path
	fi

    if [[ -d $ERLANG_VERSIONS_LOCATION/$VERSION ]]; then
        __update_scripts_evm_for_evm_use "$EVM_HOME/scripts/export_path" "$VERSION"

        evm_success_echo ""
        evm_success_echo ""
        evm_success_echo "Please restart your terminal session, or to get started execute the following command to make it effective."
        evm_success_echo ""
        evm_success_echo "       source $EVM_HOME/scripts/export_path      "
        evm_success_echo ""
	else
        evm_warn "

Erlang Version $VERSION has not been installed in $ERLANG_VERSIONS_LOCATION/$VERSION.
Use 'evm install $VERSION' to install it.
        "
        return 1
    fi
}
